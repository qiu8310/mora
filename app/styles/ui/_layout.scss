$layout-container-width: 1164px;
//$layout-container-width: 800px;
$layout-header-height: 49px;
$layout-aside-width: 220px;
$layout-footer-height: 52px;
$layout-breadcrumb-height: 40px;


html {
  position: relative;
  display: block;
  min-height: 100%;
  background: image-url("bg.png");
  overflow-x: hidden;

  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  // In addition in IE10, also add this CSS rule to remove the ghost click delay
  // http://ariatemplates.com/blog/2014/05/ghost-clicks-in-mobile-browsers/
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

body {
  display: block;
  min-height: 100%;
  padding: 0 !important;
  margin-right: auto;
  margin-left: auto;
  background: image-url("bg.png");
  overflow: hidden;


  @include selector-modifier(1 suffix '.container') {
    width: $layout-container-width;

    @include position(absolute, null 0);
    border-left: 1px solid #bfbfbf;
    border-right: 1px solid #bfbfbf;

    box-shadow: 0 2px 70px rgba(0, 0, 0, .45);
  }
}




#header {
  @include size(100% $layout-header-height, block);
  @include mp(0, 0 13px);

  position: relative;
  @include z-index(header);

  background-color: #f3f3f3;
  background-image: linear-gradient(to bottom,#f3f3f3,#e2e2e2);

  @include root-modifier('.container') {
    width: $layout-container-width;
  }
  @include root-modifier('.fix-header') {
    position: fixed;
    top: 0;
    border-bottom: 1px solid rgba(0, 0, 0, .3);
    box-shadow: -11px 12px 23px rgba(0, 0, 0, .1);
  }
}




#aside {
  @include position(absolute, 0 null null 0);
  @include z-index(aside-fixed);
  padding-top: $layout-header-height;
  width: $layout-aside-width;
  min-height: 100%;

  background: linear-gradient(to right,#3a3633 93%,#2a2725 100%);

  transition: 250ms cubic-bezier(0.1, .57, .1, 1);
  transform: translateZ(0px);

  @include root-modifier('.hide-aside') {
    left: 10px - $layout-aside-width;
    @include z-index(aside-hidden)
  }

  @include root-modifier('.fix-aside') {
    position: fixed;
  }

}


#main {
  position: relative;
  margin-left: $layout-aside-width;
  padding: 0;
  padding-bottom: $layout-footer-height;
  min-height: 500px;

  @include root-modifier('.fix-header') {
    margin-top: $layout-header-height;
  }
  @include root-modifier('.hide-aside') {
    margin-left: 10px;
  }

  .breadcrumb {
    height: $layout-breadcrumb-height;
    text-overflow: ellipsis;
    overflow: hidden;
    background: #474544;
    @include mp(0, 0 13px);
    position: relative;
    border-radius: 0;

    @include root-modifier('.fix-breadcrumb') {
      @include position(fixed, $layout-header-height 0 null $layout-aside-width);
      @include z-index(breadcrumb);
    }


    @include root-modifier('.fix-breadcrumb.hide-aside') {
      left: 10px;
    }
  }

  .content {
    position: relative;
    padding: 10px 14px;
    min-height: 400px;

    @include root-modifier('.fix-breadcrumb') {
      padding-top: $layout-breadcrumb-height + 10px;
    }

  }

  .loading {
    position: relative;
  }
  .loader {
    @include position(absolute, null 0);
    top: 150px;
    @include size(64px, none);
    margin: 0 auto;

    @include parent-modifier('.active') {
      display: block;
    }

    @include root-modifier('.fix-breadcrumb') {
      top: $layout-breadcrumb-height + 150px;
    }
  }
}




#footer {
  @include size(100% $layout-footer-height);
  @include mp(0, 15px 13px 0);
  padding-left: $layout-aside-width + 13px;

  border-top: 1px solid #CECECE;
  background: #2a2725;
  position: absolute;
  bottom: 0;

  @include root-modifier('.container') {
    width: $layout-container-width;
  }

  @include root-modifier('.hide-aside') {
    padding-left: 13px;
  }

  @include root-modifier('.fix-footer') {
    position: fixed;
    @include z-index(footer-fixed);
  }
}





//=== 动画

#aside {
  transition: 250ms cubic-bezier(0.1, .57, .1, 1);
  transform: translateZ(0px);
}


// NOTE：在 DOM 上加上 transform 会影响其子元素的 position: fixed 定位
// 本来 fixed 的 dom 元素应该相对于 html 的，但用了 transform 后，它就会相对于其父元素中第一个为 relative/fixed 的 DOM
#main {
  transition: 250ms cubic-bezier(0.1, .57, .1, 1) .1s;
  //transform: translateZ(0px);
}